---
title: "Untitled"
format: html
---

```{python}
import boto3
import json
import botocore.exceptions 
# Load the secret.json file
with open('secrets.json', 'r') as f:
    secrets = json.load(f)

aws_access_key_id = secrets['AWS_ACCESS_KEY_ID']
aws_secret_access_key = secrets['AWS_SECRET_ACCESS_KEY']
region = secrets['AWS_REGION']

# Create an S3 resource using credentials from the secret.json file
s3 = boto3.resource(
    's3',
    region_name=region,
    aws_access_key_id=aws_access_key_id,
    aws_secret_access_key=aws_secret_access_key
)

bucket_name = 'pyspacer-test'  # The bucket you have read permissions for
# Create a bucket object
bucket = s3.Bucket(bucket_name)
try:
    # List objects within the bucket
    for obj in bucket.objects.all():
        print(f'Object: {obj.key}')
except botocore.exceptions.ClientError as e:
    print(f'An error occurred: {e}')
except botocore.exceptions.NoCredentialsError as e:
    print("Credentials not available")

```

```{python}
# List folders in the bucket
for obj in bucket.objects.filter(Prefix='images-annotated/'):
    print(f'Object: {obj.key}')

```

```{python}

```

## Read directory into memory
```{python}
annotations_key = 'annotations.json'  # Assuming annotations.json is in the root of the bucket

# Create an object for the annotations file
annotations_object = s3.Object(bucket_name, annotations_key)

# Read the contents of the annotations file directly into memory
try:
    annotations_content = annotations_object.get()['Body'].read().decode('utf-8')
    all_annotations = json.loads(annotations_content)
except boto3.exceptions.S3DownloadError as e:
    print(f"Error downloading annotations: {e}")
except json.JSONDecodeError as e:
    print(f"Error decoding JSON content: {e}")
except Exception as e:
    print(f"An unexpected error occurred: {e}")
```

## Download Locally
```{python}
import boto3
from botocore.exceptions import NoCredentialsError, ClientError


# Create an S3 client
s3_client = boto3.client(
    's3',
    region_name=region,
    aws_access_key_id=aws_access_key_id,
    aws_secret_access_key=aws_secret_access_key
)

bucket_name = 'pyspacer-test'
annotations_key = 'annotations.json'  # The S3 key for the annotations file

local_file_path = 'annotations.json'  # The local path where you want to download the file

try:
    # Download the file
    s3_client.download_file(bucket_name, annotations_key, local_file_path)
    print(f"Downloaded {annotations_key} to {local_file_path}")
except NoCredentialsError:
    print("Credentials not available")
except ClientError as e:
    print(f"ClientError: {e}")
except Exception as e:
    print(f"An unexpected error occurred: {e}")



```

## Download everything

```{python}
import os
# The local directory to which you want to download the files is the current working directory
local_directory = Path.cwd()

# List and download all objects from the bucket
paginator = s3_client.get_paginator('list_objects_v2')
for page in paginator.paginate(Bucket=bucket_name):
    for obj in page.get('Contents', []):
        # Define the local path where the file should be downloaded
        local_file_path = local_directory / obj['Key']
        local_file_dir = local_file_path.parent

        # Create directories if they don't exist
        os.makedirs(local_file_dir, exist_ok=True)

        # Download the file
        s3_client.download_file(bucket_name, obj['Key'], str(local_file_path))
        print(f"Downloaded {obj['Key']} to {local_file_path}")

print("Download completed")
```
```{python}

# Use S3 as the DataLocation and configure the AWS credentials
# Use secrets.json to retrieve the AWS credentials
# Use the AWS credentials to configure the DataLocation
data_loc = DataLocation(
    storage_type='s3',
    key='images-unannotated/23_7607.JPG',
    bucket_name='pyspacer-test'
)
```



```{python}
# Find the current directory
import os
os.getcwd()
#list files in current directory
os.listdir()
#change directory
os.chdir('spacer')


```